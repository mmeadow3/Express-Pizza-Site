This is how to mimic an http server in the command line

app.use((req, res, next) => {
  console.log( "[", new Date().toString(), "]" );
  console.log(req.method, "/" , req.headers["user-agent"]);
  next()
})
/////////////////////////////////////////////////////////////

middleware is used to respond to a request object then send it back

can also have route specific middleware by providing a path

req, res, next ------ the next makes it middleware



////////////////////////////////////////////////////
/////////////////// DEPLOYING////// must have gitHub support
heroku create
git remote -v

///////make sure the start script is in the package.json//////////
"scripts": {
  "test": "echo \"Error: no test specified\" && exit 1",
  "start": "node server.js"
}
//////////////////////////////////////////
    Must include the engine for node
/////////////////////////////////////////
"engines": {
  "node": "6"
},
//////////////////////////////

git commit -m "message"
git push heroku master
heroku open


////////////////////////
may have to add//////////
"postinstall": "bower install"

in package.json




heroku logs ------ will print heroku errors


//////////Adding DB////////////////
mongod, nodemon, mongo ----- have three tabs in the terminal

npm install mongo --save

const MONGODB_URL = "mongodb://localhost:27017/pugspizza"  //////need to make a new db every project
